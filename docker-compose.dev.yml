services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '${FE_PORT:-5173}:${FE_PORT:-5173}'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - FE_PORT=${FE_PORT:-5173}
      - PORT=5173
      - NODE_ENV=development
      - DB_USER=${DB_USER:-finance}
      - DB_PASSWORD=${DB_PASSWORD:-finance}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-finance}
      - DATABASE_URL=postgres://${DB_USER:-finance}:${DB_PASSWORD:-finance}@postgres:5432/${DB_NAME:-finance}
      - SESSION_SECRET=${SESSION_SECRET:-dev-secret}
      - DEMO_USER_ID=1
      - DEMO_PASSWORD_HASH=$2b$10$3euPcmQFCiblsZeEu5s7p.9WxiKIUx0M9MNT8sMrUvRTCRaJPAJCa
    volumes:
      - ./:/app
      - /app/node_modules
      - ./app/lib/data.json:/app/public/data.json
    command: npm run dev

  postgres:
    image: postgres:15
    ports:
      - '6432:5432'
    environment:
      - POSTGRES_USER=${DB_USER:-finance}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-finance}
      - POSTGRES_DB=${DB_NAME:-finance}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-postgres-processed.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-finance}']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
