name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug Environment
        run: |
          echo "SSH_HOST: ${{ vars.SSH_HOST }}"
          echo "SSH_USERNAME: ${{ vars.SSH_USERNAME }}"
          echo "DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}"

      # Only run these steps if we're deploying to a remote server
      - name: Deploy to remote server
        if: contains(github.event_name, 'push')
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ vars.SSH_PRIVATE_KEY }}
          script: |
            echo "Current directory: $(pwd)"
            echo "Deploy path: ${{ vars.DEPLOY_PATH }}"
            cd ${{ vars.DEPLOY_PATH }}
            git pull origin main
            docker compose -f docker-compose.yml down -v || true
            DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml build --no-cache
            DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml up -d
            sleep 10
            docker compose -f docker-compose.yml exec -T postgres pg_isready -U finance
            DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml exec -T app npm run db:migrate
            DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml exec -T app npm run db:ensure-demo
            sleep 5
            curl -f http://localhost:6000/ || exit 1

      # Only run these steps if we're deploying locally
      - name: Deploy locally
        if: contains(github.event_name, 'push')
        run: |
          docker compose -f docker-compose.yml down -v || true
          DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml build --no-cache
          DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml up -d
          sleep 10
          docker compose -f docker-compose.yml exec -T postgres pg_isready -U finance
          DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml exec -T app npm run db:migrate
          DB_USER=finance DB_PASSWORD=finance DB_NAME=finance docker compose -f docker-compose.yml exec -T app npm run db:ensure-demo
          sleep 5
          curl -f http://localhost:6000/ || exit 1
